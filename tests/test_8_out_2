L 48 K 9 num_buckets 512 bucket_size 128 num_nodes 524288 max_presample_size 16 batch_size 128 sample_size 2048 num_iter 200 num_threads 48

fill_buckets_FIFO 48.661065101623535
bucket_counts.sum(dim=1).true_divide(num_nodes) tensor([0.9925, 0.9926, 0.9925, 0.9927, 0.9927, 0.9929, 0.9925, 0.9926, 0.9926,
        0.9926, 0.9925, 0.9924, 0.9924, 0.9926, 0.9923, 0.9923, 0.9923, 0.9924,
        0.9925, 0.9925, 0.9925, 0.9925, 0.9925, 0.9927, 0.9925, 0.9924, 0.9924,
        0.9926, 0.9925, 0.9925, 0.9927, 0.9925, 0.9925, 0.9924, 0.9927, 0.9925,
        0.9926, 0.9924, 0.9925, 0.9924, 0.9924, 0.9925, 0.9928, 0.9923, 0.9925,
        0.9923, 0.9926, 0.9926])
bucket_counts.sum(dim=1).true_divide(num_nodes).median() tensor(0.9925)

fill_buckets_FIFO_2 50.336689949035645
bucket_counts.sum(dim=1).true_divide(num_nodes) tensor([0.9959, 0.9955, 0.9956, 0.9953, 0.9951, 0.9947, 0.9945, 0.9942, 0.9940,
        0.9938, 0.9937, 0.9935, 0.9934, 0.9934, 0.9932, 0.9929, 0.9932, 0.9933,
        0.9933, 0.9931, 0.9930, 0.9933, 0.9933, 0.9931, 0.9932, 0.9932, 0.9932,
        0.9932, 0.9930, 0.9931, 0.9930, 0.9933, 0.9931, 0.9933, 0.9932, 0.9931,
        0.9932, 0.9931, 0.9932, 0.9932, 0.9931, 0.9930, 0.9931, 0.9931, 0.9931,
        0.9931, 0.9931, 0.9931])
bucket_counts.sum(dim=1).true_divide(num_nodes).median() tensor(0.9932)

fill_buckets_FIFO_3 51.13957643508911
bucket_counts.sum(dim=1).true_divide(num_nodes) tensor([0.9920, 0.9917, 0.9919, 0.9920, 0.9918, 0.9920, 0.9921, 0.9919, 0.9919,
        0.9917, 0.9918, 0.9917, 0.9917, 0.9917, 0.9916, 0.9919, 0.9918, 0.9920,
        0.9917, 0.9919, 0.9920, 0.9917, 0.9918, 0.9917, 0.9919, 0.9920, 0.9919,
        0.9918, 0.9919, 0.9918, 0.9917, 0.9920, 0.9918, 0.9916, 0.9918, 0.9919,
        0.9918, 0.9918, 0.9917, 0.9920, 0.9917, 0.9919, 0.9917, 0.9919, 0.9921,
        0.9919, 0.9918, 0.9919])
bucket_counts.sum(dim=1).true_divide(num_nodes).median() tensor(0.9918)

fill_buckets_FIFO_4 20.990400314331055
bucket_counts.sum(dim=1).true_divide(num_nodes) tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
bucket_counts.sum(dim=1).true_divide(num_nodes).median() tensor(1.)

fill_buckets_reservoir_sampling 33.99192571640015
bucket_counts.sum(dim=1).true_divide(num_nodes) tensor([0.9939, 0.9939, 0.9936, 0.9938, 0.9938, 0.9938, 0.9939, 0.9940, 0.9936,
        0.9938, 0.9938, 0.9935, 0.9939, 0.9938, 0.9939, 0.9938, 0.9936, 0.9939,
        0.9937, 0.9940, 0.9940, 0.9939, 0.9938, 0.9938, 0.9940, 0.9941, 0.9938,
        0.9936, 0.9939, 0.9940, 0.9936, 0.9938, 0.9940, 0.9939, 0.9937, 0.9940,
        0.9939, 0.9941, 0.9940, 0.9938, 0.9938, 0.9938, 0.9937, 0.9938, 0.9940,
        0.9940, 0.9938, 0.9939])
bucket_counts.sum(dim=1).true_divide(num_nodes).median() tensor(0.9938)

fill_buckets_reservoir_sampling_2 25.46743392944336
bucket_counts.sum(dim=1).true_divide(num_nodes) tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
bucket_counts.sum(dim=1).true_divide(num_nodes).median() tensor(1.)

sample_nodes_vanilla 1.1690950393676758

sample_nodes_vanilla_2 1.4962482452392578

sample_nodes_vanilla_3 1.2622618675231934
